name: Auto Approve PRs

"on":
  pull_request_target:
    types: [opened, reopened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  auto-approve:
    runs-on: ubuntu-latest
    if: |
      github.actor == 'dependabot[bot]' || 
      github.actor == 'github-actions[bot]' ||
      contains(github.event.pull_request.labels.*.name, 'auto-approve')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          
      - name: Read auto-approve configuration
        id: config
        run: |
          if [ -f .github/auto-approve.yml ]; then
            echo "Config file found, reading settings..."
            # For now, we'll use default settings
            echo "enabled=true" >> $GITHUB_OUTPUT
          else
            echo "No config file found, using defaults"
            echo "enabled=true" >> $GITHUB_OUTPUT
          fi
          
      - name: Check if PR should be auto-approved
        id: should-approve
        run: |
          # Check file size limits (no files larger than 1MB)
          if [ -f .github/auto-approve.yml ]; then
            max_size=$(grep "max_file_size:" .github/auto-approve.yml | cut -d':' -f2 | tr -d ' ' || echo "1048576")
          else
            max_size=1048576  # 1MB default
          fi
          
          large_files=$(find . -type f -size +${max_size}c -not -path "./.git/*" | wc -l)
          if [ $large_files -gt 0 ]; then
            echo "approve=false" >> $GITHUB_OUTPUT
            echo "reason=Large files detected" >> $GITHUB_OUTPUT
          else
            echo "approve=true" >> $GITHUB_OUTPUT
            echo "reason=All checks passed" >> $GITHUB_OUTPUT
          fi
          
      - name: Auto approve PR
        if: steps.config.outputs.enabled == 'true' && steps.should-approve.outputs.approve == 'true'
        uses: juliangruber/approve-pull-request-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          
      - name: Comment on PR
        if: steps.config.outputs.enabled == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const approved = '${{ steps.should-approve.outputs.approve }}' === 'true';
            const reason = '${{ steps.should-approve.outputs.reason }}';
            
            let message;
            if (approved) {
              message = `ü§ñ **Auto-approved** this PR!\n\n‚úÖ Reason: ${reason}\n\nThis PR has been automatically approved based on the configured rules.`;
            } else {
              message = `ü§ñ **Auto-approval skipped** for this PR.\n\n‚ùå Reason: ${reason}\n\nPlease review manually.`;
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });